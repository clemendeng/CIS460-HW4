1. A uniform variable is one that is the same for each thread in the GPU, so you can use it to uniformly modify attributes of all vertices/triangles/objects that are being processed in parallel. An in variable is one that is received from another location and used by the shader. An out variable is a variable that the shader outputs. In our case, they contain vertex information. A vertex shader passes data to a fragment shader using in and out variables. If a vertex shader has an out variable named n, and a fragment shader has an in variable named n, then this is processed as the vertex shader sending n to the fragment shader.

2. These variables are handles to VBO's on the GPU. They are given values in glGenBuffers, which returns a handle to a VBO it creates and assigns it to the int variable.